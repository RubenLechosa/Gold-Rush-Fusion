{"ast":null,"code":"import { RouterModule } from '@angular/router';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nconst routes = [];\nexport class AppRoutingModule {}\nAppRoutingModule.ɵfac = function AppRoutingModule_Factory(t) {\n  return new (t || AppRoutingModule)();\n};\nAppRoutingModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n  type: AppRoutingModule\n});\nAppRoutingModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n  imports: [RouterModule.forRoot(routes), RouterModule]\n});\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(AppRoutingModule, {\n    imports: [i1.RouterModule],\n    exports: [RouterModule]\n  });\n})();\n{\n  path: '/main', loadChildren;\n  () => import('./pages/pages.module').then(m => m.PagesModule), canActivate;\n  [AuthGuard];\n}\n{\n  path: '**', redirectTo;\n  '/login', pathMatch;\n  'full';\n}","map":{"version":3,"mappings":"AACA,SAAQA,YAAY,QAAe,iBAAiB;;;AAEpD,MAAMC,MAAM,GAAW,EAEtB;AAMD,OAAM,MAAOC,gBAAgB;AAAhBA,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;QAAhBA;AAAgB;AAAhBA,gBAAgB;YAHjBF,YAAY,CAACG,OAAO,CAACF,MAAM,CAAC,EAC5BD,YAAY;AAAA;;2EAEXE,gBAAgB;IAAAE;IAAAC,UAFjBL,YAAY;EAAA;AAAA;AAGtB;EAACM,IAAI,EAAE,OAAO,EACZC,YAAY;EAAE,MAAM,MAAM,CAAC,sBAAsB,CAAC,CAACC,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,WAAW,CAAC,EAC7EC,WAAW;EAAE,CAACC,SAAS,CAAC;;AAC1B;EAACN,IAAI,EAAE,IAAI,EAAEO,UAAU;EAAE,QAAQ,EAAEC,SAAS;EAAE,MAAM","names":["RouterModule","routes","AppRoutingModule","forRoot","imports","exports","path","loadChildren","then","m","PagesModule","canActivate","AuthGuard","redirectTo","pathMatch"],"sourceRoot":"","sources":["C:\\Users\\Alex Madrigal\\Desktop\\Routing-Sample\\src\\app\\app-routing.module.ts"],"sourcesContent":["import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\n\nconst routes: Routes = [\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n  {path: '/main',\n    loadChildren: () => import('./pages/pages.module').then((m) => m.PagesModule),\n    canActivate: [AuthGuard]},\n  {path: '**', redirectTo: '/login', pathMatch: 'full'}\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}